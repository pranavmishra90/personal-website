  # nodered:
  #   image: nodered/node-red:latest
  #   environment:
  #     - TZ=America/Chicago
  #   container_name: nodered
  #   # ports:
  #   #   - "1880:1880"
  #   networks:
  #     - t2_proxy
  #   volumes:
  #     - $DOCKERDIR/nodered:/data
  #   labels:
  #     - "traefik.enable=true"
  #     ## HTTP Routers
  #     - "traefik.http.routers.nodered-rtr.entrypoints=https"
  #     - "traefik.http.routers.nodered-rtr.tls=true"
  #     - "traefik.http.routers.nodered-rtr.rule=Host(`nodered.$DOMAINNAME`)"
  #     ## Middlewares
  #     # - "traefik.http.routers.nodered-rtr.middlewares=chain-oauth@file"
  #     # - "traefik.http.routers.nodered-rtr.middlewares=chain-basic-auth@file"
  #     - "traefik.http.routers.nodered-rtr.middlewares=chain-authelia@file" # Authelia authentication

  #     # ## HTTP Services
  #     # - "traefik.http.routers.nodered-rtr.service=nodered-svc"
  #     # - "traefik.http.services.nodered-svc.loadbalancer.server.port=8080"

    

  # # StatPing - Status Page & Monitoring Server
  # statping:
  #   image: hunterlong/statping:latest
  #   container_name: statping
  #   restart: unless-stopped
  #   networks:
  #     - t2_proxy
  #   security_opt:
  #     - no-new-privileges:true
  #   volumes:
  #     - $DOCKERDIR/statping:/app
  #   environment:
  #     DB_CONN: sqlite
  #   # ports:
  #   #   - 15090:8080
  #   labels:
  #     - "traefik.enable=true"
  #     ## HTTP Routers
  #     - "traefik.http.routers.statping-rtr.entrypoints=https"
  #     - "traefik.http.routers.statping-rtr.rule=Host(`statping.$DOMAINNAME`)"
  #     - "traefik.http.routers.statping-rtr.tls=true"
  #     ## Middlewares
  #     # - "traefik.http.routers.statping-rtr.middlewares=chain-basic-auth@file"
  #     - "traefik.http.routers.statping-rtr.middlewares=chain-authelia@file" # Authelia authentication

  #     # ## HTTP Services
  #     # - "traefik.http.routers.statping-rtr.service=statping-svc"
  #     # - "traefik.http.services.statping-svc.loadbalancer.server.port=15090"
  
  # # Glances - System monitoring
  # glances:
  #   image: nicolargo/glances:latest
  #   container_name: glances
  #   restart: unless-stopped
  #   privileged: true
  #   # network_mode: host
  #   networks:
  #     t2_proxy:
  #       ipv4_address: 10.1.2.220
  #   # depends_on:
  #   #   - socket-proxy #have not configured this yet
  #   security_opt:
  #     - no-new-privileges:true
  #   ports:
  #     - "$GLANCES_PORT:61208"
  #   pid: host
  #   volumes:
  #     - $DOCKERDIR/glances/glances.conf:/glances/conf/glances.conf # Use this if you want to add a glances.conf file
  #     - /var/run/docker.sock:/var/run/docker.sock:ro # Use Docker Socket Proxy instead for improved security
  #   environment:
  #     # GLANCES_OPT: "-C /glances/conf/glances.conf --quiet --export influxdb"
  #     GLANCES_OPT: "-w" #start a web server to view data
  #     DOCKER_HOST: tcp://socket-proxy:2375
  #   labels:
  #     - "traefik.enable=true"
  #     ## HTTP Routers
  #     - "traefik.http.routers.glances-rtr.entrypoints=https"
  #     - "traefik.http.routers.glances-rtr.rule=Host(`glances.$DOMAINNAME`)"
  #     - "traefik.http.routers.glances-rtr.tls=true"
  #     ## Middlewares
  #     # - "traefik.http.routers.glances-rtr.middlewares=chain-basic-auth@file"
  #     - "traefik.http.routers.glances-rtr.middlewares=chain-authelia@file" # Authelia authentication

  #     # ## HTTP Services
  #     # - "traefik.http.routers.glances-rtr.service=glances-svc"
  #     # - "traefik.http.services.glances-svc.loadbalancer.server.port=61208"


# # KH Info Gateway
#   khinfo:
#     image: ghcr.io/linuxserver/heimdall
#     container_name: khinfo
#     environment:
#       - PUID=$PUID
#       - PGID=$PGID
#       - TZ=$TZ
#     volumes:
#       - $DOCKERDIR/kh_gateway/config:/config
#     restart: unless-stopped
#     networks:
#       - t2_proxy
#     labels:
#       - "traefik.enable=true"
#       ## HTTP Routers
#       - "traefik.http.routers.kh-router.entrypoints=https"
#       - "traefik.http.routers.kh-router.tls=true"
#       - "traefik.http.routers.kh-router.rule=Host(`kh.$DOMAINNAME`)"
#       ## Middlewares
#       # - "traefik.http.routers.kh-router.middlewares=chain-no-auth@file"
#       # - "traefik.http.routers.kh-router.middlewares=chain-basic-auth@file" ## Website HTTP authentication
#       - "traefik.http.routers.kh-router.middlewares=chain-authelia@file" # Authelia authentication